{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "CloudFormation",
  "Parameters": {
    "AwsRegion": {
      "Description": "AWS Region",
      "Type": "String",
      "Default": "us-east-1"
    },
    "VPCName": {
      "Description": "Name of VPC",
      "Type": "String",
      "Default": "WebappCloudFormation"
    },
    "VPCSubnetCidrBlock": {
      "Description": "10.0.0.0/16 ---- total 65334 ips",
      "Type": "String",
      "Default": "10.0.0.0/16",
      "MinLength": "10",
      "MaxLength": "18"
    },
    "PublicSubnetCidrBlock1": {
      "Type": "String",
      "Default": "10.0.1.0/24",
      "MinLength": "10",
      "MaxLength": "18"
    },
    "PublicSubnetCidrBlock2": {
      "Type": "String",
      "Default": "10.0.2.0/24",
      "MinLength": "10",
      "MaxLength": "18"
    },
    "PublicSubnetCidrBlock3": {
      "Type": "String",
      "Default": "10.0.3.0/24",
      "MinLength": "10",
      "MaxLength": "18"
    },
    "AvailabilityZone1": {
      "Type": "String",
      "Default": "a",
      "AllowedValues": [
        "a",
        "b",
        "c"
      ]
    },
    "AvailabilityZone2": {
      "Type": "String",
      "Default": "b",
      "AllowedValues": [
        "a",
        "b",
        "c"
      ]
    },
    "AvailabilityZone3": {
      "Type": "String",
      "Default": "c",
      "AllowedValues": [
        "a",
        "b",
        "c"
      ]
    },
    "RouteIpaddress": {
      "Type": "String",
      "Default": "0.0.0.0/0"
    },
    "keyName": {
      "Type": "String"
    },
    "AmiId": {
      "Type": "String"
    },
    "EC2InstanceSize": {
      "Type": "String",
      "Default": "20"
    },
    "RDSInstanceSize": {
      "Type": "String",
      "Default": "20"
    },
    "RDSPublicAccessibility": {
      "Type": "String",
      "Default": "false"
    },
    "NameTag": {
      "Type": "String"
    },
    "Accountno": {
      "Type": "String"
    },
    "DBUsername": {
      "Type": "String"
    },
    "DBPassword": {
      "Type": "String"
    },
    "Circleciusername": {
      "Type": "String"
    },
    "deploybucket": {
      "Type": "String"
    }
  },
  "Resources": {
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "CidrBlock": {
          "Ref": "VPCSubnetCidrBlock"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "VPCName"
                  },
                  "-csye6225-vpc"
                ]
              ]
            }
          }
        ]
      }
    },
    "publicsubnet1": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "CidrBlock": {
          "Ref": "PublicSubnetCidrBlock1"
        },
        "AvailabilityZone": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::Region"
              },
              {
                "Ref": "AvailabilityZone1"
              }
            ]
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "VPCName"
                  },
                  "-public-az1"
                ]
              ]
            }
          }
        ]
      }
    },
    "publicsubnet2": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "CidrBlock": {
          "Ref": "PublicSubnetCidrBlock2"
        },
        "AvailabilityZone": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::Region"
              },
              {
                "Ref": "AvailabilityZone2"
              }
            ]
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "VPCName"
                  },
                  "-public-az2"
                ]
              ]
            }
          }
        ]
      }
    },
    "publicsubnet3": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "CidrBlock": {
          "Ref": "PublicSubnetCidrBlock3"
        },
        "AvailabilityZone": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::Region"
              },
              {
                "Ref": "AvailabilityZone3"
              }
            ]
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "VPCName"
                  },
                  "-public-az3"
                ]
              ]
            }
          }
        ]
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "VPCName"
                  },
                  "-public-IG"
                ]
              ]
            }
          }
        ]
      }
    },
    "GatewayAttachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "DependsOn": [
        "InternetGateway",
        "VPC"
      ],
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "PublicRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "VPCName"
                  },
                  "-csye6225-rt"
                ]
              ]
            }
          }
        ]
      }
    },
    "Route": {
      "Type": "AWS::EC2::Route",
      "DependsOn": [
        "PublicRouteTable",
        "InternetGateway"
      ],
      "Properties": {
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        },
        "DestinationCidrBlock": {
          "Ref": "RouteIpaddress"
        },
        "GatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "PublicSubnetRouteTableAssociation1": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "DependsOn": [
        "publicsubnet1",
        "PublicRouteTable",
        "GatewayAttachment"
      ],
      "Properties": {
        "SubnetId": {
          "Ref": "publicsubnet1"
        },
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        }
      }
    },
    "PublicSubnetRouteTableAssociation2": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "DependsOn": [
        "publicsubnet2",
        "PublicRouteTable",
        "GatewayAttachment"
      ],
      "Properties": {
        "SubnetId": {
          "Ref": "publicsubnet2"
        },
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        }
      }
    },
    "PublicSubnetRouteTableAssociation3": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "DependsOn": [
        "publicsubnet3",
        "PublicRouteTable",
        "GatewayAttachment"
      ],
      "Properties": {
        "SubnetId": {
          "Ref": "publicsubnet3"
        },
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        }
      }
    },
    "ec2instance": {
      "Type": "AWS::EC2::Instance",
      "DependsOn": "rdsinstance",
      "Properties": {
        "ImageId": {
          "Ref": "AmiId"
        },
        "InstanceType": "t2.micro",
        "KeyName": {
          "Ref": "keyName"
        },
        "SubnetId": {
          "Ref": "publicsubnet1"
        },
        "IamInstanceProfile": {
          "Ref": "ec2instanceprofile"
        },
        "SecurityGroupIds": [
          {
            "Ref": "applicationsecuritygroup"
          }
        ],
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "VolumeSize": {
                "Ref": "EC2InstanceSize"
              },
              "DeleteOnTermination": "true",
              "VolumeType": "gp2"
            }
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "NameTag"
            }
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -xe \n",
                "sudo apt-get update \n",
                "sudo service codedeploy-agent start \n",
                "echo 'export username=",
                {
                  "Ref": "DBUsername"
                },
                "'>> /etc/environment \n",
                "echo 'export password=",
                {
                  "Ref": "DBPassword"
                },
                "' >> /etc/environment \n",
                {
                  "Fn::Join": [
                    "",
                    [
                      "echo 'export awsRDS=jdbc:mysql://",
                      {
                        "Fn::GetAtt": [
                          "rdsinstance",
                          "Endpoint.Address"
                        ]
                      },
                      ":3306/webapp' >> /etc/environment \n"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "echo ARN=arn:aws:sns:us-east-1:",
                      {
                        "Ref": "Accountno"
                      },
                      ":password_reset >> /etc/environment \n"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "sudo echo bucketName=",
                      {
                        "Ref": "S3Bucket"
                      },
                      ">> /etc/environment \n"
                    ]
                  ]
                },
                "echo 'export endpointUrl=https://s3.us-east-1.amazonaws.com/'>> /etc/environment \n",
                "sudo source /etc/environment \n",
                "sudo mkdir /home/ubuntu/webapp \n",
                "sudo chown ubuntu:ubuntu -R /home/ubuntu/webapp \n"
              ]
            ]
          }
        }
      }
    },
    "applicationsecuritygroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "GroupDescription": "Security group for web server",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": 80,
            "ToPort": 80,
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": 22,
            "ToPort": 22,
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": 443,
            "ToPort": 443,
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": 8080,
            "ToPort": 8080,
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": 8081,
            "ToPort": 8081,
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "dbsubnetgroup": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": "Subnet description of db subnets",
        "SubnetIds": [
          {
            "Ref": "publicsubnet2"
          },
          {
            "Ref": "publicsubnet3"
          }
        ]
      }
    },
    "databasesecuritygroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "GroupDescription": "Ec2 security group for DB",
        "SecurityGroupIngress": [
          {
            "SourceSecurityGroupId": {
              "Ref": "applicationsecuritygroup"
            },
            "FromPort": 3306,
            "IpProtocol": "tcp",
            "ToPort": 3306
          }
        ]
      }
    },
    "rdsinstance": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "DBInstanceClass": "db.t3.micro",
        "AllocatedStorage": {
          "Ref": "RDSInstanceSize"
        },
        "Engine": "MySQL",
        "MultiAZ": "false",
        "DBInstanceIdentifier": "csye6225-spring2020",
        "MasterUsername": {
          "Ref": "DBUsername"
        },
        "MasterUserPassword": {
          "Ref": "DBPassword"
        },
        "DBName": "webapp",
        "DBSubnetGroupName": {
          "Ref": "dbsubnetgroup"
        },
        "PubliclyAccessible": {
          "Ref": "RDSPublicAccessibility"
        },
        "Port": "3306",
        "VPCSecurityGroups": [
          {
            "Ref": "databasesecuritygroup"
          }
        ],
        "StorageType": "gp2"
      }
    },
    "S3Bucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "Private",
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "LifecycleConfiguration": {
          "Rules": [
            {
              "Id": "MyBackupArchive",
              "Status": "Enabled",
              "Transition": {
                "TransitionInDays": "30",
                "StorageClass": "STANDARD_IA"
              }
            }
          ]
        }
      }
    },
    "ec2instanceprofile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "InstanceProfileName": "CodeDeployEC2ServiceRoleProfile",
        "Roles": [
          {
            "Ref": "CodeDeployEC2ServiceRole"
          }
        ]
      }
    },
    "CodeDeployEC2ServiceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": "Code-Deploy-EC2-ServiceRole",
        "ManagedPolicyArns": [
          {
            "Ref": "CodeDeployEC2S3"
          },
          {
            "Ref": "AccessAttachmentToS3Bucket"
          }
        ],
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        }
      }
    },
    "AccessAttachmentToS3Bucket": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
        "ManagedPolicyName": "WebAppS3",
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "s3:Get*",
                "s3:List*",
                "s3:Delete*",
                "s3:Put*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      {
                        "Ref": "S3Bucket"
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ]
        }
      }
    },
    "CodeDeployEC2S3": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
        "ManagedPolicyName": "CodeDeploy-EC2-S3",
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "s3:Get*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      {
                        "Ref": "deploybucket"
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ]
        }
      }
    },
    "CircleCIUploadToS3": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
        "ManagedPolicyName": "CircleCI-Upload-To-S3",
        "Users": [
          {
            "Ref": "Circleciusername"
          }
        ],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "s3:PutObject"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      {
                        "Ref": "deploybucket"
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ]
        }
      }
    },
    "CircleCICodeDeploy": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
        "ManagedPolicyName": "CircleCI-Code-Deploy",
        "Users": [
          {
            "Ref": "Circleciusername"
          }
        ],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "codedeploy:RegisterApplicationRevision",
                "codedeploy:GetApplicationRevision"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:codedeploy:us-east-1:",
                      {
                        "Ref": "Accountno"
                      },
                      ":application:csye6225-webapp"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "codedeploy:CreateDeployment",
                "codedeploy:GetDeployment"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "codedeploy:GetDeploymentConfig"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:codedeploy:us-east-1:",
                      {
                        "Ref": "Accountno"
                      },
                      ":deploymentconfig:CodeDeployDefault.OneAtATime"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:codedeploy:us-east-1:",
                      {
                        "Ref": "Accountno"
                      },
                      ":deploymentconfig:CodeDeployDefault.HalfAtATime"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:codedeploy:us-east-1:",
                      {
                        "Ref": "Accountno"
                      },
                      ":deploymentconfig:CodeDeployDefault.AllAtOnce"
                    ]
                  ]
                }
              ]
            }
          ]
        }
      }
    },
    "CodeDeployServiceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": "Code-Deploy-Service-Role",
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "codedeploy.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole"
        ]
      }
    },
    "CodeDeployApplication": {
      "Type": "AWS::CodeDeploy::Application",
      "Properties": {
        "ApplicationName": "csye6225-webapp",
        "ComputePlatform": "Server"
      }
    },
    "Deploymentgroup": {
      "Type": "AWS::CodeDeploy::DeploymentGroup",
      "Properties": {
        "ApplicationName": {
          "Ref": "CodeDeployApplication"
        },
        "DeploymentGroupName": "csye6225-webapp-deployment",
        "DeploymentConfigName": "CodeDeployDefault.AllAtOnce",
        "DeploymentStyle": {
          "DeploymentOption": "WITHOUT_TRAFFIC_CONTROL",
          "DeploymentType": "IN_PLACE"
        },
        "AutoRollbackConfiguration": {
          "Enabled": "True",
          "Events": [
            "DEPLOYMENT_FAILURE"
          ]
        },
        "Ec2TagFilters": [
          {
            "Key": "Name",
            "Type": "KEY_AND_VALUE",
            "Value": {
              "Ref": "NameTag"
            }
          }
        ],
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "CodeDeployServiceRole",
            "Arn"
          ]
        }
      }
    }
  },
  "Outputs": {
    "vpcid": {
      "Description": "A reference to the created VPC",
      "Value": {
        "Ref": "VPC"
      }
    },
    "PublicSubnet1": {
      "Description": "A reference to the public subnet1",
      "Value": {
        "Ref": "publicsubnet1"
      }
    },
    "PublicSubnet2": {
      "Description": "A reference to the public subnet2",
      "Value": {
        "Ref": "publicsubnet2"
      }
    },
    "PublicSubnet3": {
      "Description": "A reference to the public subnet3",
      "Value": {
        "Ref": "publicsubnet3"
      }
    },
    "EC2Instance": {
      "Description": "A reference to EC2 Instance",
      "Value": {
        "Ref": "ec2instance"
      }
    },
    "RDSInstance": {
      "Description": "A reference to RDS Instance",
      "Value": {
        "Ref": "rdsinstance"
      }
    },
    "ApplicationSecurityGroup": {
      "Description": "A reference to ApplicationSecurityGroup Instance",
      "Value": {
        "Ref": "applicationsecuritygroup"
      }
    },
    "DBSecurityGroup": {
      "Description": "A reference to DBSecurityGroup Instance",
      "Value": {
        "Ref": "databasesecuritygroup"
      }
    }
  }
}
